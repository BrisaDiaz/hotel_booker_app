import type { NextPage, GetServerSideProps, NextApiResponse } from 'next';
import { client } from '@/lib/apollo';
import { GET_HOTEL_BY_ID } from '@/queries/index';
import Head from 'next/head';
import Grid from '@mui/material/Grid';
import Box from '@mui/material/Box';
import DoneIcon from '@mui/icons-material/Done';
import LocalPhoneIcon from '@mui/icons-material/LocalPhone';
import EmailIcon from '@mui/icons-material/Email';
import MyLocationIcon from '@mui/icons-material/MyLocation';
import Typography from '@mui/material/Typography';
import AlarmIcon from '@mui/icons-material/Alarm';
import Tabs from '@/components/Tabs';
import ImageSlider from '@/components/ImageSlider';
import DinamicFieldIcone from '@/components/DinamicFieldIcone';
import ApartmentIcon from '@mui/icons-material/Apartment';
import RoomServiceIcon from '@mui/icons-material/RoomService';
import HikingIcon from '@mui/icons-material/Hiking';
import LanguageIcon from '@mui/icons-material/Language';
import RoomCard from '@/components/RoomCard';
import { useTheme } from '@mui/material/styles';

const Hotel: NextPage = ({ hotel }) => {
  const theme = useTheme();
  const images = [
    { title: 'Hotel frame', image: hotel.frameImage },
    { title: 'Hotel Interior', image: hotel.interiorImage },
  ];
  const characteristics = [
    {
      title: 'facilities',
      items: hotel.facilities,
    },
    {
      title: 'services',
      items: hotel.services,
    },

    {
      title: 'activities',
      items: hotel.activities,
    },
    {
      title: 'languages',
      items: hotel.languages,
    },
  ];
  const includedFeatures = Object.keys(hotel.features).filter(
    (featureName) =>
      hotel.features[featureName] !== true && featureName !== '__typename'
  );

  const formattedAdditonalFeatures = includedFeatures.map((featureName) =>
    featureName
      .split(/(?=[A-Z])/)
      .join(' ')
      .toLowerCase()
  );

  return (
    <div>
      <Head>
        <title>Hotel</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="page">
        <section className="container">
          <Typography
            variant="h3"
            component="h1"
            sx={{
              fontWeight: 700,
              margin: '0 16px',
              width: 'fit-content',
              color: theme.palette.common.black,
              padding: '10px 0 5px',
            }}
          >
            {hotel.name}
          </Typography>
          <div className="list inportant contact-info">
            <div className="list-item">
              <MyLocationIcon />
              <p>{hotel.address.holeAddress}</p>
            </div>
            <div className="list-item">
              <LocalPhoneIcon />
              <p>{hotel.telephone}</p>
            </div>
            {hotel?.email && (
              <div className="list-item">
                <EmailIcon />
                <p>{hotel.email}</p>
              </div>
            )}
            {hotel?.website && (
              <div className="list-item">
                <LanguageIcon />
                <p>{hotel.website}</p>
              </div>
            )}
          </div>
          {/* CARROUSEL */}
          <ImageSlider images={images} />

          <Typography
            component="h4"
            variant="h5"
            sx={{
              p: '10px',
              fontWeight: 200,
              maxWidth: 'fit-content',
              m: '0 15px 10px auto',
            }}
          >
            Prices from{' '}
            <Typography
              variant="h5"
              component="span"
              sx={{ color: 'primary.main', fontWeight: 700, ml: 1 }}
            >
              USD${hotel.lowestPrice}
            </Typography>
          </Typography>
          <div className="list row">
            <div className="list-item">
              <AlarmIcon color="primary" />
              <p>
                <span>Check In Hour:</span>
                {`  ${hotel.checkInHour}`}
              </p>
            </div>
            <div className="list-item">
              <AlarmIcon color="primary" />
              <p>
                <span>Check Out Hour:</span>
                {`  ${hotel.checkOutHour}`}
              </p>
            </div>
          </div>

          {/* HOTEL POLICIES AND RULES */}
          <Box sx={{ margin: '20px 10px' }} component="section">
            <Tabs
              data={[
                {
                  title: 'About Us',
                  Content: (
                    <p
                      className="text"
                      dangerouslySetInnerHTML={{
                        __html: hotel.description.replace('/n', '</br>'),
                      }}
                    />
                  ),
                },
                {
                  title: 'Policies and Rules',
                  Content: (
                    <>
                      <p className="text">{hotel.policiesAndRules}</p>
                    </>
                  ),
                },
              ]}
            />
          </Box>

          {/* HOTEL CHARAACTERISTICS */}

          <Box sx={{ margin: '20px 0' }} component="section">
            <Grid
              container
              alignItems="flex-start"
              sx={{ margin: '0 ', columnGap: '80px' }}
            >
              {characteristics.map((characteristic) =>
                characteristic.items.length ? (
                  <div key={characteristic.title}>
                    <Grid
                      item
                      xs={12}
                      sm={6}
                      sx={{ padding: 1, minWidth: 'max-content' }}
                    >
                      <Box
                        sx={{
                          display: 'flex',
                          gap: '10px',
                          alignItems: 'center',
                          marginBottom: '15px',
                        }}
                      >
                        {characteristic.title === 'facilities' ? (
                          <ApartmentIcon color="primary" />
                        ) : characteristic.title === 'services' ? (
                          <RoomServiceIcon color="primary" />
                        ) : characteristic.title === 'languages' ? (
                          <LanguageIcon color="primary" />
                        ) : characteristic.title === 'activities' ? (
                          <HikingIcon color="primary" />
                        ) : null}

                        <Typography
                          variant="h6"
                          sx={{
                            fontWeight: 300,
                            textTransform: 'capitalize',
                          }}
                        >
                          {characteristic.title}
                        </Typography>
                      </Box>

                      <div className="list">
                        {characteristic.items.map((item) => (
                          <div key={item.id} className="list-item">
                            <DoneIcon
                              fontSize="small"
                              sx={{ color: theme.palette.primary.light }}
                            />
                            <p>{item.name}</p>
                          </div>
                        ))}
                      </div>
                    </Grid>
                  </div>
                ) : null
              )}
              <Grid
                item
                xs={12}
                sm={6}
                sx={{ padding: 1, minWidth: 'max-content' }}
              >
                {formattedAdditonalFeatures.map((featureName) => (
                  <div className="list" key={featureName}>
                    <div className="list-item">
                      {DinamicFieldIcone(featureName)}

                      <p>{featureName}</p>
                    </div>
                  </div>
                ))}
              </Grid>
            </Grid>
          </Box>
        </section>
        {hotel?.roomModels?.length > 0 && (
          <Box>
            <Typography
              variant="h4"
              component="h2"
              sx={{
                fontWeight: 700,
                color: 'primary.main',
                margin: '20px 15px 30px',
              }}
            >
              Rooms
            </Typography>
            <Box sx={{ margin: '20px auto' }}>
              <Grid container spacing={3} justifyContent="center">
                {hotel.roomModels.map(
                  (room: {
                    id: number;
                    name: string;
                    mts2: number;
                    lowestPrice: number;
                    mainImage: string;
                    beds?: {
                      id: number;
                      quantity: number;
                      type: string;
                    };
                  }) => (
                    <Grid item xs={12} sm={6} md={4}>
                      <RoomCard room={room} />
                    </Grid>
                  )
                )}
              </Grid>
            </Box>
          </Box>
        )}
      </main>

      <style jsx>
        {`
          .page {
            max-width: 1000px;
            margin: 20px auto;
          }

          h5 {
            font-size: 18px;
            margin: 0;
          }

          .list {
            display: flex;
            flex-direction: column;
            column-gap: 20px;
            flex-wrap: wrap;
            padding: 0 10px;
            text-transform: capitalize;
            font-weight: 400;
          }
          span,
          .inportant {
            color: ${theme.palette.primary.main};
          }
          .row {
            flex-direction: row;
          }
          .text {
            padding: 0 10px;
          }

          .list-item {
            display: flex;
            gap: 10px;
            align-items: center;
          }

          .list-item p {
            margin: 8px 0;
          }

          .contact-info {
            margin: 5px 0;
            color: ${theme.palette.primary.main};
            padding: 10px;
            justify-content: 'start';
            flex-direction: row;
          }
          .contact-info div p {
            font-weight: 100;
            margin: 8px;
            font-size: 14px;
          }
        `}
      </style>
    </div>
  );
};

export default Hotel;
export const getServerSideProps: GetServerSideProps = async ({
  query,
  res,
}: {
  query: { id: number };
  res: NextApiResponse;
}) => {
  const { data, error, loading } = await client.query({
    query: GET_HOTEL_BY_ID,
    variables: { id: query.id },
  });
  if (!data?.hotelById && !loading) {
    return {
      redirect: {
        permanent: false,
        destination: '/search',
      },
      props: {},
    };
  }

  if (data?.getHotelById && !loading) {
    return {
      props: {
        hotel: data?.getHotelById,
      },
    };
  }
};
