import type { NextPage } from 'next';
import React from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import AdminMenu from '@/components/layouts/AdminMenu';
import Box from '@mui/material/Box';
import Grid from '@mui/material/Grid';
import ActionCard from '@/components/dashboard/ActionCard';

import CardMedia from '@mui/material/CardMedia';
import Typography from '@mui/material/Typography';
import hotel from '@/mocks/hotel';
import Card from '@mui/material/Card';
import { WithLayoutPage } from '@/interfaces/index';
const styles = {
  legend: {
    opacity: 0.6,
    fontWeight: 400,
    width: '55%',
  },
};

interface ActionCard {
  title: string;
  actions: Array<{ name: string; callback: Function }>;
  count: number;
  color?: string;
}
function ActionCardGrid({ cards }: { cards: ActionCard[] }) {
  return (
    <Grid
      container
      sx={{
        width: '100%',
        maxWidth: '1000px',
        justifyContent: { xs: 'center', md: 'start' },
        p: 3,
      }}
      spacing={3}
    >
      {cards.map((card) => (
        <Grid
          item
          xs={12}
          md={4}
          lg={3.5}
          key={card.title}
          sx={{
            display: 'flex',
            justifyContent: { sx: 'center', md: 'start' },
          }}
        >
          <ActionCard card={card} />
        </Grid>
      ))}
    </Grid>
  );
}
const HotelAdmin: WithLayoutPage = () => {
  const router = useRouter();
  const { hotelId } = router.query;
  const features = [
    { title: 'Facilities', items: hotel.facilities },
    { title: 'Services', items: hotel.services },
    { title: 'Activities', items: hotel.activities },
    { title: 'Languages', items: hotel.languages },
  ];
  const cardsData = [
    {
      title: 'Room types',
      count: 3,
      actions: [
        {
          name: 'view',
          callback: () => {
            router.push({
              pathname: '/admin/hotel/room-type',
              query: { hotelId },
            });
          },
        },
        {
          name: 'add',
          callback: () => {
            router.push({
              pathname: '/admin/upload/room',
              query: { hotelId },
            });
          },
        },
      ],
    },
    {
      title: 'Guests',
      count: 3,
      actions: [
        {
          name: 'view',
          callback: () => {
            router.push({
              pathname: '/admin/hotel/guests',
              query: { hotelId },
            });
          },
        },
        {
          name: 'add',
          callback: () => {
            console.log('add  guest');
          },
        },
      ],
    },
    {
      title: 'Requests',
      count: 2,
      actions: [
        {
          name: 'view',
          callback: () => {
            router.push({
              pathname: '/admin/hotel/requests',
              query: { hotelId },
            });
          },
        },
      ],
    },
  ];

  return (
    <div>
      <Head>
        <title>Hotel</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box component="main">
        <ActionCardGrid cards={cardsData} />

        <Box
          sx={{
            width: '100%',
            maxWidth: '1100px',
            display: 'flex',
            flexWrap: 'wrap',
            height: '260px',
            my: 4,
          }}
        >
          <Card
            sx={{
              maxWidth: '500px',
              width: '100%',
              minWidth: '318px',
              height: 'fit-content',
              m: { sm: 3 },
            }}
          >
            <CardMedia
              component="img"
              alt="frame image"
              height="250"
              sx={{ objectFit: 'cover' }}
              image={hotel.frameImage}
              title="frame image"
            />
          </Card>
          <Box
            sx={{
              py: 2,
              px: 3,
              minWidth: '318px',
              height: 'fit-content',
            }}
          >
            <Typography variant="h6" sx={{ mb: 2 }}>
              Prices
            </Typography>
            <Box sx={{ display: 'flex', gap: 3, mb: 2 }}>
              <Typography sx={styles.legend}>Lowest price</Typography>
              <Typography>USD${hotel.lowestPrice}</Typography>
            </Box>
            <Box sx={{ display: 'flex', gap: 3, mb: 2 }}>
              <Typography sx={styles.legend}>Taxes and Charges</Typography>
              <Typography>USD${hotel.taxesAndCharges}</Typography>
            </Box>
            <Box></Box>
          </Box>
          {features.map((feature) => (
            <Box
              key={feature.title}
              sx={{
                py: 2,
                px: 3,
                width: 'fit-content',
                height: '100%',
                overflow: 'hidden',
              }}
            >
              <Typography variant="h6" sx={{ mb: 2 }}>
                {feature.title}
                <Typography
                  component="span"
                  sx={{ opacity: 0.8, fontSize: '16px' }}
                >
                  {`(${feature.items.length})`}{' '}
                </Typography>
              </Typography>
              {feature.items.map((item) => (
                <Box key={item.id} sx={{ display: 'flex', gap: 3, mb: 2 }}>
                  <Typography>{item.name}</Typography>
                </Box>
              ))}
            </Box>
          ))}
        </Box>
      </Box>
    </div>
  );
};

HotelAdmin.getLayout = function getLayout(page: React.ReactNode) {
  return <AdminMenu activeLink="hotel">{page}</AdminMenu>;
};

export default HotelAdmin;
