import Head from 'next/head';
import { GetServerSideProps } from 'next';
import RoomForm from '@/components/RoomForm';
import HotelForm from '@/components/HotelForm';
import Backdrop from '@/components/Backdrop';

import { client } from '@/lib/apollo';
import { useMutation } from '@apollo/client';
import {
  GET_ALL_SERVICES,
  GET_ALL_ROOM_CATEGORIES,
  CREATE_ROOM_MODEL,
  GET_ALL_AMENITIES,
} from '@/queries/index';
type Option = {
  id: number;
  name: string;
};
const Home = ({
  amenitiesList,
  servicesList,
  roomCategoriesList,
}: {
  amenitiesList: Option[];
  servicesList: Option[];
  roomCategoriesList: Option[];
}): JSX.Element => {
  const [createRoomModel, { error, loading }] = useMutation(CREATE_ROOM_MODEL);
  const onSubmit = async (data) => {
    try {
      // createRoomModel({variables:data})
    } catch (err) {}
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {!loading && error && (
          <Alerts type="error" alerts={error.graphQLErrors} />
        )}
        <RoomForm
          services={servicesList}
          amenities={amenitiesList}
          roomCategories={roomCategoriesList}
          onSubmit={onSubmit}
        />
        <Backdrop loading={loading} />
      </main>
    </div>
  );
};
export default Home;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const servicesRequest = await client.query({
    query: GET_ALL_SERVICES,
  });
  const amenitiesRequest = await client.query({
    query: GET_ALL_AMENITIES,
  });
  const categoriesRequest = await client.query({
    query: GET_ALL_ROOM_CATEGORIES,
  });

  const response = await Promise.all([
    servicesRequest,
    categoriesRequest,
    amenitiesRequest,
  ]);

  const props = {
    ...amenitiesRequest.data,
    ...servicesRequest.data,
    ...categoriesRequest.data,
  };

  return {
    props: {
      ...props,
    },
  };
};
