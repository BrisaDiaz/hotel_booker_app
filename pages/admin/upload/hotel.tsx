import Head from 'next/head';
import Image from 'next/image';
import { GetStaticProps } from 'next';
import { gql } from '@apollo/client';
import { client } from '../../../lib/apollo';
import HotelForm from '../../../components/HotelForm';

const GET_ALL_SERVICES = gql`
  query allServices {
    allServices {
      name
    }
  }
`;
const GET_ALL_RESTRICTIONS = gql`
  query allRestrictions {
    allRestrictions {
      name
    }
  }
`;
const GET_ALL_FACILITIES = gql`
  query allFacilities {
    allFacilities {
      name
    }
  }
`;
const GET_ALL_ACTIVITIES = gql`
  query allActivities {
    allActivities {
      name
    }
  }
`;
const GET_ALL_LANGUAGES = gql`
  query allLanguages {
    allLanguages {
      name
    }
  }
`;
type Option = {
  id: number;
  name: string;
};
const Home = ({
  facilities,
  activities,
  services,
  languages,
  hotelCategories,
}: {
  facilities: Option[];
  activities: Option[];
  services: Option[];
  languages: Option[];
  hotelCategories: Option[];
}): JSX.Element => {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <HotelForm
          facilities={facilities}
          activities={activities}
          services={services}
          languages={languages}
          hotelCategories={hotelCategories}
        />
      </main>
    </div>
  );
};
export default Home;

export const getStaticProps: GetStaticProps = async (context) => {
  // const restrictionsResults = await client.query({
  //   query: GET_ALL_RESTRICTIONS,
  // });
  // const servicesResults = await client.query({ query: GET_ALL_SERVICES });
  // const facilitiesResults = await client.query({ query: GET_ALL_FACILITIES });
  const props = {
    facilities: new Array(6)
      .fill(0)
      .map((_, index) => ({ id: index + 1, name: 'restaurant' })),
    activities: new Array(5)
      .fill(0)
      .map((_, index) => ({ id: index + 1, name: 'marathon' })),
    services: new Array(15)
      .fill(0)
      .map((_, index) => ({ id: index + 1, name: 'room services' })),
    languages: Array(8)
      .fill(0)
      .map((_, index) => ({ id: index + 1, name: 'english' })),
    hotelCategories: Array(8)
      .fill(0)
      .map((_, index) => ({ id: index + 1, name: 'resort' })),
  };
  return {
    // props: {
    //   facilities: facilitiesResults?.data?.allFacilities || [],
    //   restrictions: restrictionsResults?.data?.allRestrictions || [],
    //   services: servicesResults?.data?.allServices || [],
    // },
    props: {
      ...props,
    },
  };
};
